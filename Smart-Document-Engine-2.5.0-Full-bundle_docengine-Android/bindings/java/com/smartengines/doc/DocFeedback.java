/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.smartengines.doc;

import com.smartengines.common.*;

public class DocFeedback {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public DocFeedback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(DocFeedback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(DocFeedback obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jnidocengineJNI.delete_DocFeedback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    jnidocengineJNI.DocFeedback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    jnidocengineJNI.DocFeedback_change_ownership(this, swigCPtr, true);
  }

  public void FeedbackReceived(DocFeedbackContainer container) {
    jnidocengineJNI.DocFeedback_FeedbackReceived(swigCPtr, this, DocFeedbackContainer.getCPtr(container), container);
  }

  public boolean AcceptsPagesLocalizationFeedback() {
    return (getClass() == DocFeedback.class) ? jnidocengineJNI.DocFeedback_AcceptsPagesLocalizationFeedback(swigCPtr, this) : jnidocengineJNI.DocFeedback_AcceptsPagesLocalizationFeedbackSwigExplicitDocFeedback(swigCPtr, this);
  }

  public void PagesLocalizationFeedbackReceived(DocPagesFeedbackContainer container) {
    jnidocengineJNI.DocFeedback_PagesLocalizationFeedbackReceived(swigCPtr, this, DocPagesFeedbackContainer.getCPtr(container), container);
  }

  public boolean AcceptsPagePreprocessingFeedback() {
    return (getClass() == DocFeedback.class) ? jnidocengineJNI.DocFeedback_AcceptsPagePreprocessingFeedback(swigCPtr, this) : jnidocengineJNI.DocFeedback_AcceptsPagePreprocessingFeedbackSwigExplicitDocFeedback(swigCPtr, this);
  }

  public void PagePrepocessingFeedbackReceived(DocPagesFeedbackContainer container) {
    jnidocengineJNI.DocFeedback_PagePrepocessingFeedbackReceived(swigCPtr, this, DocPagesFeedbackContainer.getCPtr(container), container);
  }

  public boolean AcceptsRawFieldsLocalizationFeedback() {
    return (getClass() == DocFeedback.class) ? jnidocengineJNI.DocFeedback_AcceptsRawFieldsLocalizationFeedback(swigCPtr, this) : jnidocengineJNI.DocFeedback_AcceptsRawFieldsLocalizationFeedbackSwigExplicitDocFeedback(swigCPtr, this);
  }

  public void RawFieldsLocalizationFeedbackReceived(DocRawFieldsFeedbackContainer container) {
    jnidocengineJNI.DocFeedback_RawFieldsLocalizationFeedbackReceived(swigCPtr, this, DocRawFieldsFeedbackContainer.getCPtr(container), container);
  }

  public boolean AcceptsRawFieldsRecognitionFeedback() {
    return (getClass() == DocFeedback.class) ? jnidocengineJNI.DocFeedback_AcceptsRawFieldsRecognitionFeedback(swigCPtr, this) : jnidocengineJNI.DocFeedback_AcceptsRawFieldsRecognitionFeedbackSwigExplicitDocFeedback(swigCPtr, this);
  }

  public void RawFiedlsRecognitionFeedbackReceived(DocRawFieldsFeedbackContainer container) {
    jnidocengineJNI.DocFeedback_RawFiedlsRecognitionFeedbackReceived(swigCPtr, this, DocRawFieldsFeedbackContainer.getCPtr(container), container);
  }

  public void ResultReceived(DocResult result_received) {
    jnidocengineJNI.DocFeedback_ResultReceived(swigCPtr, this, DocResult.getCPtr(result_received), result_received);
  }

  public DocFeedback() {
    this(jnidocengineJNI.new_DocFeedback(), true);
    jnidocengineJNI.DocFeedback_director_connect(this, swigCPtr, true, true);
  }

}
