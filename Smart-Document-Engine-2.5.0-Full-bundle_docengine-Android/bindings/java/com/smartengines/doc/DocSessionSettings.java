/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.smartengines.doc;

import com.smartengines.common.*;

public class DocSessionSettings {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public DocSessionSettings(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(DocSessionSettings obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(DocSessionSettings obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jnidocengineJNI.delete_DocSessionSettings(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DocSessionSettings Clone() {
    long cPtr = jnidocengineJNI.DocSessionSettings_Clone(swigCPtr, this);
    return (cPtr == 0) ? null : new DocSessionSettings(cPtr, true);
  }

  public int GetOptionsCount() {
    return jnidocengineJNI.DocSessionSettings_GetOptionsCount(swigCPtr, this);
  }

  public boolean HasOption(String option_name) {
    return jnidocengineJNI.DocSessionSettings_HasOption(swigCPtr, this, option_name);
  }

  public String GetOption(String option_name) {
    return jnidocengineJNI.DocSessionSettings_GetOption(swigCPtr, this, option_name);
  }

  public void SetOption(String option_name, String option_value) {
    jnidocengineJNI.DocSessionSettings_SetOption(swigCPtr, this, option_name, option_value);
  }

  public void RemoveOption(String option_name) {
    jnidocengineJNI.DocSessionSettings_RemoveOption(swigCPtr, this, option_name);
  }

  public StringsMapIterator OptionsBegin() {
    return new StringsMapIterator(jnidocengineJNI.DocSessionSettings_OptionsBegin(swigCPtr, this), true);
  }

  public StringsMapIterator OptionsEnd() {
    return new StringsMapIterator(jnidocengineJNI.DocSessionSettings_OptionsEnd(swigCPtr, this), true);
  }

  public int GetSupportedModesCount() {
    return jnidocengineJNI.DocSessionSettings_GetSupportedModesCount(swigCPtr, this);
  }

  public boolean HasSupportedMode(String mode_name) {
    return jnidocengineJNI.DocSessionSettings_HasSupportedMode(swigCPtr, this, mode_name);
  }

  public String GetSupportedMode(int mode_id) {
    return jnidocengineJNI.DocSessionSettings_GetSupportedMode(swigCPtr, this, mode_id);
  }

  public StringsVectorIterator SupportedModesBegin() {
    return new StringsVectorIterator(jnidocengineJNI.DocSessionSettings_SupportedModesBegin(swigCPtr, this), true);
  }

  public StringsVectorIterator SupportedModesEnd() {
    return new StringsVectorIterator(jnidocengineJNI.DocSessionSettings_SupportedModesEnd(swigCPtr, this), true);
  }

  public String GetCurrentMode() {
    return jnidocengineJNI.DocSessionSettings_GetCurrentMode(swigCPtr, this);
  }

  public void SetCurrentMode(String mode_name) {
    jnidocengineJNI.DocSessionSettings_SetCurrentMode(swigCPtr, this, mode_name);
  }

  public int GetInternalEnginesCount() {
    return jnidocengineJNI.DocSessionSettings_GetInternalEnginesCount(swigCPtr, this);
  }

  public int GetSupportedDocumentTypesCount(int engine_id) {
    return jnidocengineJNI.DocSessionSettings_GetSupportedDocumentTypesCount(swigCPtr, this, engine_id);
  }

  public boolean HasSupportedDocumentType(int engine_id, String doc_name) {
    return jnidocengineJNI.DocSessionSettings_HasSupportedDocumentType(swigCPtr, this, engine_id, doc_name);
  }

  public String GetSupportedDocumentType(int engine_id, int doc_id) {
    return jnidocengineJNI.DocSessionSettings_GetSupportedDocumentType(swigCPtr, this, engine_id, doc_id);
  }

  public int GetEnabledDocumentTypesCount() {
    return jnidocengineJNI.DocSessionSettings_GetEnabledDocumentTypesCount(swigCPtr, this);
  }

  public boolean HasEnabledDocumentType(String doc_name) {
    return jnidocengineJNI.DocSessionSettings_HasEnabledDocumentType(swigCPtr, this, doc_name);
  }

  public String GetEnabledDocumentType(int doc_id) {
    return jnidocengineJNI.DocSessionSettings_GetEnabledDocumentType(swigCPtr, this, doc_id);
  }

  public DocDocumentInfo GetDocumentInfo(String doc_name) {
    return new DocDocumentInfo(jnidocengineJNI.DocSessionSettings_GetDocumentInfo(swigCPtr, this, doc_name), false);
  }

  public void AddEnabledDocumentTypes(String doc_type_mask) {
    jnidocengineJNI.DocSessionSettings_AddEnabledDocumentTypes(swigCPtr, this, doc_type_mask);
  }

  public void RemoveEnabledDocumentTypes(String doc_type_mask) {
    jnidocengineJNI.DocSessionSettings_RemoveEnabledDocumentTypes(swigCPtr, this, doc_type_mask);
  }

  public StringsSetIterator PermissiblePrefixDocMasksBegin() {
    return new StringsSetIterator(jnidocengineJNI.DocSessionSettings_PermissiblePrefixDocMasksBegin(swigCPtr, this), true);
  }

  public StringsSetIterator PermissiblePrefixDocMasksEnd() {
    return new StringsSetIterator(jnidocengineJNI.DocSessionSettings_PermissiblePrefixDocMasksEnd(swigCPtr, this), true);
  }

  public boolean IsForensicsEnabled() {
    return jnidocengineJNI.DocSessionSettings_IsForensicsEnabled(swigCPtr, this);
  }

  public void EnableForensics() {
    jnidocengineJNI.DocSessionSettings_EnableForensics(swigCPtr, this);
  }

  public void DisableForensics() {
    jnidocengineJNI.DocSessionSettings_DisableForensics(swigCPtr, this);
  }

}
