/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.smartengines.doc;

import com.smartengines.common.*;

public class DocResult {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public DocResult(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(DocResult obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(DocResult obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jnidocengineJNI.delete_DocResult(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DocResult PartialClone() {
    long cPtr = jnidocengineJNI.DocResult_PartialClone(swigCPtr, this);
    return (cPtr == 0) ? null : new DocResult(cPtr, false);
  }

  public int GetDocumentsCount() {
    return jnidocengineJNI.DocResult_GetDocumentsCount(swigCPtr, this);
  }

  public boolean HasDocument(int doc_id) {
    return jnidocengineJNI.DocResult_HasDocument(swigCPtr, this, doc_id);
  }

  public Document GetDocument(int doc_id) {
    return new Document(jnidocengineJNI.DocResult_GetDocument(swigCPtr, this, doc_id), false);
  }

  public DocumentsIterator DocumentsBegin() {
    return new DocumentsIterator(jnidocengineJNI.DocResult_DocumentsBegin(swigCPtr, this), true);
  }

  public DocumentsIterator DocumentsEnd() {
    return new DocumentsIterator(jnidocengineJNI.DocResult_DocumentsEnd(swigCPtr, this), true);
  }

  public void Serialize(Serializer serializer) {
    jnidocengineJNI.DocResult_Serialize(swigCPtr, this, Serializer.getCPtr(serializer), serializer);
  }

  public DocPhysicalDocument GetPhysicalDocument(int idx) {
    return new DocPhysicalDocument(jnidocengineJNI.DocResult_GetPhysicalDocument(swigCPtr, this, idx), false);
  }

  public DocPhysicalDocument GetPhysicalDocumentPtr(int idx) {
    long cPtr = jnidocengineJNI.DocResult_GetPhysicalDocumentPtr(swigCPtr, this, idx);
    return (cPtr == 0) ? null : new DocPhysicalDocument(cPtr, false);
  }

  public int GetScenesCount() {
    return jnidocengineJNI.DocResult_GetScenesCount(swigCPtr, this);
  }

  public DocSceneInfo GetSceneInfo(int idx) {
    return new DocSceneInfo(jnidocengineJNI.DocResult_GetSceneInfo(swigCPtr, this, idx), false);
  }

  public DocSceneInfo GetLastSceneInfo() {
    return new DocSceneInfo(jnidocengineJNI.DocResult_GetLastSceneInfo(swigCPtr, this), false);
  }

  public DocGraphicalStructure GetGraphicalStructure() {
    return new DocGraphicalStructure(jnidocengineJNI.DocResult_GetGraphicalStructure(swigCPtr, this), false);
  }

  public DocGraphicalStructure GetMutableGraphicalStructure() {
    return new DocGraphicalStructure(jnidocengineJNI.DocResult_GetMutableGraphicalStructure(swigCPtr, this), false);
  }

  public Document GetMutableDocument(int doc_id) {
    return new Document(jnidocengineJNI.DocResult_GetMutableDocument(swigCPtr, this, doc_id), false);
  }

  public DocTagsCollection GetDocumentTags(int doc_id) {
    return new DocTagsCollection(jnidocengineJNI.DocResult_GetDocumentTags(swigCPtr, this, doc_id), false);
  }

  public DocumentsMutableIterator AddDocument(Document doc) {
    return new DocumentsMutableIterator(jnidocengineJNI.DocResult_AddDocument(swigCPtr, this, Document.getCPtr(doc), doc), true);
  }

  public void SetDocument(int doc_id, Document doc) {
    jnidocengineJNI.DocResult_SetDocument(swigCPtr, this, doc_id, Document.getCPtr(doc), doc);
  }

  public void RemoveDocument(int doc_id) {
    jnidocengineJNI.DocResult_RemoveDocument(swigCPtr, this, doc_id);
  }

  public DocumentsMutableIterator MutableDocumentsBegin() {
    return new DocumentsMutableIterator(jnidocengineJNI.DocResult_MutableDocumentsBegin(swigCPtr, this), true);
  }

  public DocumentsMutableIterator MutableDocumentsEnd() {
    return new DocumentsMutableIterator(jnidocengineJNI.DocResult_MutableDocumentsEnd(swigCPtr, this), true);
  }

  public DocumentsSliceIterator DocumentsSlice(String tag) {
    return new DocumentsSliceIterator(jnidocengineJNI.DocResult_DocumentsSlice(swigCPtr, this, tag), true);
  }

  public DocumentsMutableSliceIterator MutableDocumentsSlice(String tag) {
    return new DocumentsMutableSliceIterator(jnidocengineJNI.DocResult_MutableDocumentsSlice(swigCPtr, this, tag), true);
  }

  public boolean CanBuildPDFABuffer() {
    return jnidocengineJNI.DocResult_CanBuildPDFABuffer(swigCPtr, this);
  }

  public void BuildPDFABuffer() {
    jnidocengineJNI.DocResult_BuildPDFABuffer(swigCPtr, this);
  }

  public void GetPDFABuffer(byte[] output_buf) {
    jnidocengineJNI.DocResult_GetPDFABuffer(swigCPtr, this, output_buf);
  }

  public int GetPDFABufferSize() {
    return jnidocengineJNI.DocResult_GetPDFABufferSize(swigCPtr, this);
  }

  public void SetAddTextMode(String mode_name) {
    jnidocengineJNI.DocResult_SetAddTextMode(swigCPtr, this, mode_name);
  }

  public String GetAddTextMode() {
    return jnidocengineJNI.DocResult_GetAddTextMode(swigCPtr, this);
  }

  public boolean HasAddTextMode(String mode_name) {
    return jnidocengineJNI.DocResult_HasAddTextMode(swigCPtr, this, mode_name);
  }

  public StringsVectorIterator AddTextModesBegin() {
    return new StringsVectorIterator(jnidocengineJNI.DocResult_AddTextModesBegin(swigCPtr, this), true);
  }

  public StringsVectorIterator AddTextModesEnd() {
    return new StringsVectorIterator(jnidocengineJNI.DocResult_AddTextModesEnd(swigCPtr, this), true);
  }

  public void SetTextTypeMode(String mode_name) {
    jnidocengineJNI.DocResult_SetTextTypeMode(swigCPtr, this, mode_name);
  }

  public String GetTextTypeMode() {
    return jnidocengineJNI.DocResult_GetTextTypeMode(swigCPtr, this);
  }

  public boolean HasTextTypeMode(String mode_name) {
    return jnidocengineJNI.DocResult_HasTextTypeMode(swigCPtr, this, mode_name);
  }

  public StringsVectorIterator TextTypeModesBegin() {
    return new StringsVectorIterator(jnidocengineJNI.DocResult_TextTypeModesBegin(swigCPtr, this), true);
  }

  public StringsVectorIterator TextTypeModesEnd() {
    return new StringsVectorIterator(jnidocengineJNI.DocResult_TextTypeModesEnd(swigCPtr, this), true);
  }

  public void SetColourMode(boolean with_colour) {
    jnidocengineJNI.DocResult_SetColourMode(swigCPtr, this, with_colour);
  }

  public boolean GetColourMode() {
    return jnidocengineJNI.DocResult_GetColourMode(swigCPtr, this);
  }

}
