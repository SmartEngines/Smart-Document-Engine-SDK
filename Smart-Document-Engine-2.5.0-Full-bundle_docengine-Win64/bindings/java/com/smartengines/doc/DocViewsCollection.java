/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.smartengines.doc;

import com.smartengines.common.*;

public class DocViewsCollection {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public DocViewsCollection(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(DocViewsCollection obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(DocViewsCollection obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jnidocengineJNI.delete_DocViewsCollection(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static String BaseClassNameStatic() {
    return jnidocengineJNI.DocViewsCollection_BaseClassNameStatic();
  }

  public int GetViewsCount() {
    return jnidocengineJNI.DocViewsCollection_GetViewsCount(swigCPtr, this);
  }

  public boolean HasView(int view_id) {
    return jnidocengineJNI.DocViewsCollection_HasView(swigCPtr, this, view_id);
  }

  public DocView GetView(int view_id) {
    return new DocView(jnidocengineJNI.DocViewsCollection_GetView(swigCPtr, this, view_id), false);
  }

  public DocView GetMutableView(int view_id) {
    return new DocView(jnidocengineJNI.DocViewsCollection_GetMutableView(swigCPtr, this, view_id), false);
  }

  public DocTagsCollection GetViewTags(int view_id) {
    return new DocTagsCollection(jnidocengineJNI.DocViewsCollection_GetViewTags(swigCPtr, this, view_id), false);
  }

  public DocViewsMutableIterator RegisterView(Image image) {
    return new DocViewsMutableIterator(jnidocengineJNI.DocViewsCollection_RegisterView(swigCPtr, this, Image.getCPtr(image), image), true);
  }

  public DocViewsMutableIterator RegisterDerivedView(Image image, int ancestor_id, ProjectiveTransform transform) {
    return new DocViewsMutableIterator(jnidocengineJNI.DocViewsCollection_RegisterDerivedView(swigCPtr, this, Image.getCPtr(image), image, ancestor_id, ProjectiveTransform.getCPtr(transform), transform), true);
  }

  public void DeleteOrphans() {
    jnidocengineJNI.DocViewsCollection_DeleteOrphans(swigCPtr, this);
  }

  public void DeleteView(int view_id) {
    jnidocengineJNI.DocViewsCollection_DeleteView(swigCPtr, this, view_id);
  }

  public DocViewsIterator ViewsBegin() {
    return new DocViewsIterator(jnidocengineJNI.DocViewsCollection_ViewsBegin(swigCPtr, this), true);
  }

  public DocViewsIterator ViewsEnd() {
    return new DocViewsIterator(jnidocengineJNI.DocViewsCollection_ViewsEnd(swigCPtr, this), true);
  }

  public DocViewsMutableIterator MutableViewsBegin() {
    return new DocViewsMutableIterator(jnidocengineJNI.DocViewsCollection_MutableViewsBegin(swigCPtr, this), true);
  }

  public DocViewsMutableIterator MutableViewsEnd() {
    return new DocViewsMutableIterator(jnidocengineJNI.DocViewsCollection_MutableViewsEnd(swigCPtr, this), true);
  }

  public DocViewsSliceIterator ViewsSlice(String tag) {
    return new DocViewsSliceIterator(jnidocengineJNI.DocViewsCollection_ViewsSlice(swigCPtr, this, tag), true);
  }

  public DocViewsMutableSliceIterator MutableViewsSlice(String tag) {
    return new DocViewsMutableSliceIterator(jnidocengineJNI.DocViewsCollection_MutableViewsSlice(swigCPtr, this, tag), true);
  }

  public void Serialize(Serializer serializer) {
    jnidocengineJNI.DocViewsCollection_Serialize(swigCPtr, this, Serializer.getCPtr(serializer), serializer);
  }

}
