/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.smartengines.doc;

import com.smartengines.common.*;

public class DocBaseFieldInfo {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public DocBaseFieldInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(DocBaseFieldInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(DocBaseFieldInfo obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jnidocengineJNI.delete_DocBaseFieldInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public String GetName() {
    return jnidocengineJNI.DocBaseFieldInfo_GetName(swigCPtr, this);
  }

  public void SetName(String name) {
    jnidocengineJNI.DocBaseFieldInfo_SetName(swigCPtr, this, name);
  }

  public double GetConfidence() {
    return jnidocengineJNI.DocBaseFieldInfo_GetConfidence(swigCPtr, this);
  }

  public void SetConfidence(double conf) {
    jnidocengineJNI.DocBaseFieldInfo_SetConfidence(swigCPtr, this, conf);
  }

  public boolean GetAcceptFlag() {
    return jnidocengineJNI.DocBaseFieldInfo_GetAcceptFlag(swigCPtr, this);
  }

  public void SetAcceptFlag(boolean is_accepted) {
    jnidocengineJNI.DocBaseFieldInfo_SetAcceptFlag(swigCPtr, this, is_accepted);
  }

  public int GetAttributesCount() {
    return jnidocengineJNI.DocBaseFieldInfo_GetAttributesCount(swigCPtr, this);
  }

  public boolean HasAttribute(String attr_name) {
    return jnidocengineJNI.DocBaseFieldInfo_HasAttribute(swigCPtr, this, attr_name);
  }

  public String GetAttribute(String attr_name) {
    return jnidocengineJNI.DocBaseFieldInfo_GetAttribute(swigCPtr, this, attr_name);
  }

  public void SetAttribute(String attr_name, String attr_value) {
    jnidocengineJNI.DocBaseFieldInfo_SetAttribute(swigCPtr, this, attr_name, attr_value);
  }

  public void RemoveAttribute(String attr_name) {
    jnidocengineJNI.DocBaseFieldInfo_RemoveAttribute(swigCPtr, this, attr_name);
  }

  public StringsMapIterator AttributesBegin() {
    return new StringsMapIterator(jnidocengineJNI.DocBaseFieldInfo_AttributesBegin(swigCPtr, this), true);
  }

  public StringsMapIterator AttributesEnd() {
    return new StringsMapIterator(jnidocengineJNI.DocBaseFieldInfo_AttributesEnd(swigCPtr, this), true);
  }

  public DocTextObjectsCrossPageIterator ConnectedTextObjectsBegin(DocPhysicalDocument phys_doc) {
    return new DocTextObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedTextObjectsBegin(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocTextObjectsCrossPageIterator ConnectedTextObjectsEnd(DocPhysicalDocument phys_doc) {
    return new DocTextObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedTextObjectsEnd(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocTableObjectsCrossPageIterator ConnectedTableObjectsBegin(DocPhysicalDocument phys_doc) {
    return new DocTableObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedTableObjectsBegin(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocTableObjectsCrossPageIterator ConnectedTableObjectsEnd(DocPhysicalDocument phys_doc) {
    return new DocTableObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedTableObjectsEnd(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocImageObjectsCrossPageIterator ConnectedImageObjectsBegin(DocPhysicalDocument phys_doc) {
    return new DocImageObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedImageObjectsBegin(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocImageObjectsCrossPageIterator ConnectedImageObjectsEnd(DocPhysicalDocument phys_doc) {
    return new DocImageObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedImageObjectsEnd(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocCheckboxObjectsCrossPageIterator ConnectedCheckboxObjectsBegin(DocPhysicalDocument phys_doc) {
    return new DocCheckboxObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedCheckboxObjectsBegin(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocCheckboxObjectsCrossPageIterator ConnectedCheckboxObjectsEnd(DocPhysicalDocument phys_doc) {
    return new DocCheckboxObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedCheckboxObjectsEnd(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocTextObjectsCrossPageIterator ConnectedForensicCheckObjectsBegin(DocPhysicalDocument phys_doc) {
    return new DocTextObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedForensicCheckObjectsBegin(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocTextObjectsCrossPageIterator ConnectedForensicCheckObjectsEnd(DocPhysicalDocument phys_doc) {
    return new DocTextObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedForensicCheckObjectsEnd(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocMetaObjectsCrossPageIterator ConnectedForensicObjectsBegin(DocPhysicalDocument phys_doc) {
    return new DocMetaObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedForensicObjectsBegin(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocMetaObjectsCrossPageIterator ConnectedForensicObjectsEnd(DocPhysicalDocument phys_doc) {
    return new DocMetaObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedForensicObjectsEnd(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocBarcodeObjectsCrossPageIterator ConnectedBarcodeObjectsBegin(DocPhysicalDocument phys_doc) {
    return new DocBarcodeObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedBarcodeObjectsBegin(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public DocBarcodeObjectsCrossPageIterator ConnectedBarcodeObjectsEnd(DocPhysicalDocument phys_doc) {
    return new DocBarcodeObjectsCrossPageIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedBarcodeObjectsEnd(swigCPtr, this, DocPhysicalDocument.getCPtr(phys_doc), phys_doc), true);
  }

  public void Serialize(Serializer serializer) {
    jnidocengineJNI.DocBaseFieldInfo_Serialize(swigCPtr, this, Serializer.getCPtr(serializer), serializer);
  }

  public DocBasicObjectsCrossSliceIterator ConnectedBasicObjectsBegin(DocGraphicalStructure graphical) {
    return new DocBasicObjectsCrossSliceIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedBasicObjectsBegin(swigCPtr, this, DocGraphicalStructure.getCPtr(graphical), graphical), true);
  }

  public DocBasicObjectsCrossSliceIterator ConnectedBasicObjectsEnd(DocGraphicalStructure graphical) {
    return new DocBasicObjectsCrossSliceIterator(jnidocengineJNI.DocBaseFieldInfo_ConnectedBasicObjectsEnd(swigCPtr, this, DocGraphicalStructure.getCPtr(graphical), graphical), true);
  }

  public DocBasicObjectsMutableCrossSliceIterator MutableConnectedBasicObjectsBegin(DocGraphicalStructure graphical) {
    return new DocBasicObjectsMutableCrossSliceIterator(jnidocengineJNI.DocBaseFieldInfo_MutableConnectedBasicObjectsBegin(swigCPtr, this, DocGraphicalStructure.getCPtr(graphical), graphical), true);
  }

  public DocBasicObjectsMutableCrossSliceIterator MutableConnectedBasicObjectsEnd(DocGraphicalStructure graphical) {
    return new DocBasicObjectsMutableCrossSliceIterator(jnidocengineJNI.DocBaseFieldInfo_MutableConnectedBasicObjectsEnd(swigCPtr, this, DocGraphicalStructure.getCPtr(graphical), graphical), true);
  }

  public void ConnectBasicObject(int coll_id, int obj_id) {
    jnidocengineJNI.DocBaseFieldInfo_ConnectBasicObject(swigCPtr, this, coll_id, obj_id);
  }

}
